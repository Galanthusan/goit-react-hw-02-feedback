{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","h2","FeedbackOptions","options","onLeaveFeedback","good","neutral","bad","button","type","value","onClick","Statistics","total","positivePercantage","item","Notification","message","App","state","handleIncrement","console","log","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Object","values","reduce","acc","positive","Math","round","this","Component","ReactDOM","render","document","getElementById"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,KAAO,2B,gBCA3DD,EAAOC,QAAU,CAAC,OAAS,kC,uCCA3BD,EAAOC,QAAU,CAAC,QAAU,gC,sLCgBbC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,iCACE,wBAAIC,UAAWC,IAAOC,IAAKJ,GAC1BC,I,gBCqCQI,EAzCS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC1BC,EAAuBF,EAAvBE,KAAMC,EAAiBH,EAAjBG,QAASC,EAAQJ,EAARI,IACvB,OACE,oCACE,4BACER,UAAWC,IAAOQ,OAClBC,KAAK,SACLC,MAAOL,EACPM,QAAS,kBAAMP,EAAgB,UAJjC,QAQA,4BACEL,UAAWC,IAAOQ,OAClBC,KAAK,SACLC,MAAOJ,EACPK,QAAS,kBAAMP,EAAgB,aAJjC,WAQA,4BACEL,UAAWC,IAAOQ,OAClBC,KAAK,SACLC,MAAOH,EACPI,QAAS,kBAAMP,EAAgB,SAJjC,S,gBCSSQ,EA9BI,SAAC,GAAuD,IAArDP,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKM,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,oCACE,uBAAGf,UAAWC,IAAOH,OAArB,SACQ,0BAAME,UAAWC,IAAOe,MAAOV,IAEvC,uBAAGN,UAAWC,IAAOH,OAArB,YACW,0BAAME,UAAWC,IAAOe,MAAOT,IAE1C,uBAAGP,UAAWC,IAAOH,OAArB,QACO,0BAAME,UAAWC,IAAOe,MAAOR,IAEtC,uBAAGR,UAAWC,IAAOH,OAArB,UACS,0BAAME,UAAWC,IAAOe,MAAOF,IAExC,uBAAGd,UAAWC,IAAOH,OACnB,0BAAME,UAAWC,IAAOe,MAAOD,EAA/B,Q,gBCPOE,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,uBAAGlB,UAAWC,IAAOiB,SAAUA,IC2DzBC,E,4MAzDbC,MAAQ,CACNd,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPa,gBAAkB,SAACV,GACjBW,QAAQC,IAAIZ,EAAO,SACnB,EAAKa,UAAS,SAACC,GAAD,sBACXd,EAAQc,EAAUd,GAAS,MAE9B,EAAKe,qBACL,EAAKC,mC,EAGPD,mBAAqB,WACnB,OAAOE,OAAOC,OAAO,EAAKT,OAAOU,QAAO,SAACC,EAAKpB,GAAN,OAAgBoB,EAAMpB,IAAO,I,EAGvEgB,gCAAkC,SAACb,EAAOkB,GACxC,OAAOC,KAAKC,MAAkB,IAAXF,EAAkBlB,I,uDAG7B,IAAD,EACwBqB,KAAKf,MAA5Bd,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEjBM,EAAQqB,KAAKT,qBACbX,EAAqBoB,KAAKR,gCAC9Bb,EACAR,GAGF,OACE,oCACE,kBAAC,EAAD,CAASR,MAAM,yBACb,kBAAC,EAAD,CACEM,QAAS+B,KAAKf,MACdf,gBAAiB8B,KAAKd,mBAGzBc,KAAKT,qBAAuB,EAC3B,kBAAC,EAAD,CAAS5B,MAAM,cACb,kBAAC,EAAD,CACEQ,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLM,MAAOA,EACPC,mBAAoBA,KAIxB,kBAAC,EAAD,CAAcG,QAAQ,2B,GApDdkB,a,MCDlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8e75cf13.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__2pxse\",\"item\":\"Statistics_item__kU-MQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3wHhT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__2CNmU\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2 className={styles.h2}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.element.isRequired,\r\n};\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  const { good, neutral, bad } = options;\r\n  return (\r\n    <>\r\n      <button\r\n        className={styles.button}\r\n        type=\"button\"\r\n        value={good}\r\n        onClick={() => onLeaveFeedback(\"good\")}\r\n      >\r\n        Good\r\n      </button>\r\n      <button\r\n        className={styles.button}\r\n        type=\"button\"\r\n        value={neutral}\r\n        onClick={() => onLeaveFeedback(\"neutral\")}\r\n      >\r\n        Neutral\r\n      </button>\r\n      <button\r\n        className={styles.button}\r\n        type=\"button\"\r\n        value={bad}\r\n        onClick={() => onLeaveFeedback(\"bad\")}\r\n      >\r\n        Bad\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.shape({\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n  }).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Statistics.module.css\";\r\nconst Statistics = ({ good, neutral, bad, total, positivePercantage }) => {\r\n  return (\r\n    <>\r\n      <p className={styles.title}>\r\n        Good: <span className={styles.item}>{good}</span>\r\n      </p>\r\n      <p className={styles.title}>\r\n        Neutral: <span className={styles.item}>{neutral}</span>\r\n      </p>\r\n      <p className={styles.title}>\r\n        Bad: <span className={styles.item}>{bad}</span>\r\n      </p>\r\n      <p className={styles.title}>\r\n        Total: <span className={styles.item}>{total}</span>\r\n      </p>\r\n      <p className={styles.title}>\r\n        <span className={styles.item}>{positivePercantage}%</span>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercantage: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Notification.module.css\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p className={styles.message}>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\r\nimport Section from \"./Section/Section\";\r\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\r\nimport Statistics from \"./Statistics/Statistics\";\r\nimport Notification from \"./Notification/Notification\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleIncrement = (value) => {\r\n    console.log(value, \"value\");\r\n    this.setState((prevState) => ({\r\n      [value]: prevState[value] + 1,\r\n    }));\r\n    this.countTotalFeedback();\r\n    this.countPositiveFeedbackPercentage();\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    return Object.values(this.state).reduce((acc, value) => acc + value, 0);\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = (total, positive) => {\r\n    return Math.round((positive * 100) / total);\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n\r\n    const total = this.countTotalFeedback();\r\n    const positivePercantage = this.countPositiveFeedbackPercentage(\r\n      total,\r\n      good\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={this.state}\r\n            onLeaveFeedback={this.handleIncrement}\r\n          />\r\n        </Section>\r\n        {this.countTotalFeedback() > 0 ? (\r\n          <Section title=\"Statistics\">\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={total}\r\n              positivePercantage={positivePercantage}\r\n            />\r\n          </Section>\r\n        ) : (\r\n          <Notification message=\"No feedback given\" />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}